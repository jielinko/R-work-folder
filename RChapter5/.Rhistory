class(x)
p <- as.POSIXlt(x)
p
class(p)
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
names(unclass(p))
p$min
p$hour
p$year
as.POSIXct(p)
p
class(p)
x1 <- "Jan 1,2015 01:01"
x1
strptime(x1,"%B %d,%Y %H:%M")
strptime(x1,"%B %d, %Y %H:%M")
x1
x1 <- "Jan 1,2015 01:01"
strptime(x1,"%B %d, %Y %H:%M")
x1 <- "一月 1,2015 01:01"
strptime(x1,"%B %d, %Y %H:%M")
x 《- 1:10
x <- 1:10
x[3]
x[5]
x[1:5]
x[6:10]
x[x>5]
x>5
x[x>5&x<7]
x[x<3 | x<7]
x[x<3 | x>7]
y <- 1:4
y
names(y) <- c("a","b","c","d")
y
y[2]
y["b"]
x <- matrix(1:6, nrow=2,ncol=3)
x
x[1,2]
x[2,3]
x[1,]
x[,1]
x[2,c(1,3)]
class(x[1,2])
x[1,2,drop = false]
x[1,2,drop = FALSE]
x <- data.frame(v1=1:5,v2=6:10,v3=11:15)
x
x$v3[c(2,4)] <- NA
x
x[,2]
x[,"v2"]
x[(x$v1<4 & x$v2>=8),]
x[(x$v1<4 & x$v2>=7),]
x[(x$v1<4 | x$v2>=7),]
x[x$v1>2,]
x[which(x$v1>2),]
?which
which(x$v1>2)
x$v1>2
subset(x,x$v1>2)
x <- list(id=1:4,height=170,gender="male")
x
x[1]
x["id"]
x[[1]]
x[["id"]]
x$id
x["id"]
x[c(1,3)]
y<- "id"
x[["id"]]
x[[y]]
x$id
x<- list(a = list(1,2,3,4),b=c("Monday","Tuesday"))
x
x[[a]]
x[[a]]
x[[1]]
x[[1]][[2]]
x[[1]][2
x[[1]][2]
x[[1]][2]
x[[c(1,3)]]
x[[c(2,2)]]
l$asdfghj
l <- list(asdfghj=1:10)
l$asdfghj
l$a
l[[]]
l[[a]]
l[["a"]]
l[["a",exact=FALSE]]
x <- list(asdfghj=1:10,b=1:2,aaa=3:5)
x$a
x[["a",exact=FALSE]]
x$as
x <- c(1,NA,2,NA,3)
is.na(x)
x[is.na(x)]
x[is.na(x)]
x[!is.na(x)]
x <- c(1,NA,2,NA,3)
y <- c("a","b",NA,"c",NA)
z <- complete.cases(x,y)
z
x[z]
y[z]
head(airquality)
g <- complete.cases(airquality)
g
airquality[g,][1:10,]
x <- 1:5
y <- 6:10
x+y
x+y
x*y
x/y
x*y
x/y
x <- matrix(1:4,nrow=2,ncol=2)
y <- matrix(rep(2,4),nrow=2,ncol=2)
x*y
x/y
x %*% y
str(lapply)
x <- list(a=1:10,b=c(11,21,31,41,51))
x
lapply(x,mean)
x <- 1:4
lapply(x.runif)
lapply(x,runif,min=0,max=100)
lapply(x.runif)
lapply(x,runif,min=0,max=100)
x <- 1:4
lapply(x.runif)
lapply(x,runif)
x <- list(a=matrix(1:6,2,3),b=matrix(4:7,2,2))
x
lapply(x,function(m) m[1,])
x <- list(a=1:10,b=c(11,21,31,41,51))
lapply(x,mean)
sapply(x,mean)
x <- matrix(1:16,4,4)
x
apply(x,2,mean)
apply(x,2,sum)
apply(x,1,sum)
apply(x,1,mean)
x <- matrix(rnorm(100),10,10)
x
apply(x,1,quantile,probs=c(0.25,0.75))
x <- array(rnorm(2*3*4),c(2,3,4))
x
apply(x,c(1,2),mean)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
S <- function(n,mean,std){
rnorm(n,mean,std)
}
s(4,0,1)
S(4,0,1)
mapply(S,1:5,5:1,2)
list(s(1,5,2),s(2,4,2),s(3,3,2),s(4,2,2),s(5,1,2))
s <- function(n,mean,std){
rnorm(n,mean,std)
}
list(s(1,5,2),s(2,4,2),s(3,3,2),s(4,2,2),s(5,1,2))
class("test")
class(10.10)
class(10)
class(as.integer(3))
class(as.integer(3.1))
as.integer(3.1)
class(as.integer(T))
as.integer(T)
as.integer(F)
class(2+2i)
class(T)
class(True)
as.integer(3.1)
as.integer("hello")
as.integer(1+2i)
as.integer(1+2i)
as.integer(2+2i)
as.integer("test")
as.complex(2)
is.integer(2)
is.integer(as.integer(2))
is.integer(2)
is.integer(as.integer(2))
is.complex(2)
is.complex(as.complex(2))
as.logical(1)
as.logical(2)
as.logical(1)
as.logical(2)
is.logical(2)
is.logical(1)
is.logical(T)
is.logical(F)
1+2
1-2
1*2
1/2
2^3
2**3
sqrt(4)
11 %/% 5
11 %% 5
12 %% 5
1+2
sign(10)
sign(0)
sign(-10)
abs(10)
abs(0)
abs(-10)
log(10)
log(10,2) # 指定log 以 2 为底
log2(10) # log2 代表以 2 為底
log10(10) # log10 代表以 10 為底
exp(10)
exp(10)
expm1(10)
x+y
x <- 1
y <- 2
x+y
x1 <- x2 <- 1
x1 + x2
x = 1
x = 1.3
x
x = 1 + 2i
x
x = "test"
x
x = FALSE
x
x = 10
x
exsit("x")
exsits("x")
exists("x")
exists("x")
x
exists(x)
c(1,2,3)
c(1,TRUE,"test")
c(1.1,TRUE,"test")
c(1+2i, TRUE, "test") # 全部都變成 character
c(1,TRUE)
c(1.1,TRUE)
c(1+2i, TRUE)
c(1, 1.1) # 全部自動轉成 numeric
c(1, 1.1, 1+2i)
x1 <- 1:4
x1
x2
x2 <- c(1,2,3,4)
x2
x3 <- c(TRUE,10,"a")
x3
x4 <- c("a","b","c")
x4
as.numeric(x4)
x <- vector("character",length = 10)
x
x <- c(joe=12, vicky=14, bob=17)
x
x[1]
x[[1]]
x["joe"]
x[1]
x[[1]]
x["joe"]
x[["joe"]]
x[]
x[1:2]
1:5
seq(1:5)
seq(1,5,0.3)
req(c(1,2,3),times=3,each=2)
req(c(1,2,3),times=3,each=2)
rep(c(1,2,3),times=3,each=2)
rep(1:4,times=3,each=2)
c(3,4,2) + c(3,4,2)
c(3,4,2) - c(3,4,2)
c(3,4,2) * c(3,4,2)
c(3,4,2) / c(3,4,2)
length(c(3,4,2))
sum(c(3,4,2))
prod(c(3,4,2))
cumsum(c(3,4,2))
cumprod(c(3,4,2))
sort(c(3,4,2))
rank(c(3,4,2))
c(1,2) + c(1,2,3)
c(1,2) + c(1,2,3,4)
c(1,2) * c(1,2,3)
c(1,2) * c(1,2,3,4)
x <- c(1,2,3)
1,2,3
x <- c(1,2,3)
rbind(x,y)
y <- c(4,5,6)
rbind(x,y)
cbind(x,y)
x <- c(1,2,3)
array(x,c(1,3))
array(x,c(2,3))
x <- matrix(1:6, nrow =3 ,ncol = 2)
x
attributes(x)
y2 <- matrix(1:6, nrow=2 ,ncol=3)
用
y2
y <- matrix(1:6, nrow = 2 ,ncol = 3)
x <- c(1,2,3)
y <- c(4,5,6)
rbind(x,y) # rbind 是通过 row(横) 合并
cbind(x,y)
x <- c(1,2,3)
y <- c(4,5,6)
x <- c(1,2,3)
y <- c(4,5,6)
z <- rbind(x,y)
z
z[,1]
z[1,] # 选取第一行(row 横)
z[1,1:2] # 选取第一行第一到第二列
x <- c(1,2,3)
y <- c(4,5,6)
x
y
z <- rbind(x,y)
z
z + z
z - 2 * z
z * z
length(z)
dim(z)
ncol(z)
nrow(z)
z
aperm(z)
matrix(c(1:4), nrow = 2, ncol = 2)
matrix(c(1:6), nrow = 3, ncol = 2) # 預設是按照 column 填入資料
matrix(c(1:6), nrow = 3, ncol = 2) # 預設是按照 column 填入資料
matrix(c(1:6), nrow = 3, ncol = 2, byrow = TRUE)
x <- c(1,2,3)
y <- c(4,5,6)
z <- rbind(x,y)
z
z[,1]
z[1,]
z[1,1:2]
t(z)
z
z %*% z
v <- z %*% t(z)
v
w
w <- diag(c(1,2,3))
w
diag(w) # 傳入矩陣回傳矩陣對角線向量
v
det(v)
slove(v)
solve(v)
c(1,1)
b = c(1,1)  # 解 Ax = b，求出 x ; 向量 A:變數 v,b:變數 b
solve(v,b)
v
v*0.8333333
u = matrix(1:9, nrow = 3, ncol = 3)
u = matrix(1:9, nrow = 3, ncol = 3)
u
u
eigen(u)
rownames(z)
rownames(z)
rownames(z)
rownames(z)
rownames(z) <- c("第一行","第二行")
rownames(z)
colnames(z)
colnames(z)
colnames(z) <- c("第一列","第二列")
colnames(z)
colnames(z) <- c("第一列","第二列")
colnames(z) <- c("第一列","第二列","第三列")
colnames(z)
z
factor(x)
x <- c(1,2,4,3,1,2,3,4,1)
factor(x)
factor(x, labels = c("一", "二", "三", "四")) # 可自訂 Level 的名稱。
factor(x, ordered = TRUE) # ordered 代表可做排序
factor(c(1, 2, 1, NA, 2), exclude = NA) # 可利用 exclude 排除特定資料。
factor(c(1, 2, 1, NA, 2), exclude = 2)
factor(c(1, 2, 1, NA, 2), exclude = NULL) # 不排除任何資料。
factor(c(1, 2, 1, NA, 2))
factor(c(1, 2, 1, NA, 2), exclude = NA)
x[1]
x[[1]]
x[c(1,3,5)]
x <- c(1,2,4,3,1,2,3,4,1)
x
x <- c(1,2,4,3,1,2,3,4,1)
as.factor(x)
is.factor(x)
is.factor(as.factor(x))
is.ordered(factor(x,ordered = TRUE))
as.ordered(factor(x))
which(x == 1)
getwd
getwd()
setwd("E:\R-work-folder\RChapter5")
setwd("E:\\R-work-folder\RChapter5")
setwd("E:\\R-work-folder\\RChapter5")
getwd()
RIKZ <- read.table(file = "RIKZ.txt",header = TRUE)
RIKZ
names(RIKZ)
RIKZ$Richness <- rowSums(RIKZ[,2:76] > 0)
RIKZ$Richness
RIKZ <- read.table(file = "RIKZ.txt",header = TRUE)
RIKZ$Richness <- rowSums(RIKZ[,2:76] > 0)
par(mar = c(4.5,4.5,0.5,0.5), cex.lab = 1.5, cex.axis = 1.5)
plot(RIKZ$NAP,RIKZ$Richness, ylab = "Richness", xlab = "NAP")
RIKZ <- read.table(file = "RIKZ.txt",header = TRUE)
RIKZ$Richness <- rowSums(RIKZ[,2:76] > 0)
par(mar = c(4.5,4.5,0.5,0.5), cex.lab = 1.5, cex.axis = 1.5)
plot(RIKZ$NAP,RIKZ$Richness, ylab = "Richness", xlab = "NAP")
RIKZ <- read.table(file = "RIKZ.txt",header = TRUE)
RIKZ$Richness <- rowSums(RIKZ[,2:76] > 0)
par(mar = c(4.5,4.5,0.5,0.5), cex.lab = 1.5, cex.axis = 1.5)
plot(RIKZ$NAP,RIKZ$Richness, ylab = "Richness", xlab = "NAP")
RIKZ_model.1<-lm(Richness ~ NAP, data = RIKZ)
abline(RIKZ_model.1)
RIKZ <- read.table(file = "RIKZ.txt",header = TRUE)
RIKZ$Richness <- rowSums(RIKZ[,2:76] > 0)
RIKZ_model.1<-lm(Richness ~ NAP, data = RIKZ)
summary(RIKZ_model.1)$coefficients
x <- list(a = 1, b = TRUE, c = "test", d = c(1,2,3))
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1,2,3))
x[1]
x[[1]]
x$b # 利用 $ 加上名称提取资料
x[[4]][1]
x[[4]][2]
as.list(c(1,2,3))
is.list(x)
attributes(x)
names(x)
names <- c("Joe","Bob","Vicky")
names
data <- data.frame(name,age,gender)
names <- c("Joe","Bob","Vicky")
age <- c("28","26","34")
gender <- c("Male","Male","Female")
data <- data.frame(name,age,gender)
name <- c("Joe","Bob","Vicky")
age <- c("28","26","34")
gender <- c("Male","Male","Female")
data <- data.frame(name,age,gender)
data
view(data) #自动点选data变数就会开启资料的画面
views(data) #自动点选data变数就会开启资料的画面
data
data[1,]
data[,1]
data[1,1]
data[,"name"]
data[1:2,"name"]
data$name[1:2]
data
head(data)
head(data,1L)
names(data)
names(data) <- c("n","a","g")
data
names(data)
colnames(data)
row.names(data)
row.names(data) <- c("r1","r2","r3")
data
rownames(data)
row.names(data)
rownames(data)
summary(data)
RIKZ_model.1<-lm(Richness ~ NAP, data = RIKZ)
RIKZ_model.1
AIC(RIKZ_model.1<-lm(Richness ~ NAP, data = RIKZ))
?predict.glm
x <- 1:5
y <- 6:10
x+y
x*y
x/y
x <- matrix(1:4,nrow=2,ncol=2)
y <- matrix(rep(2,4),nrow=2,ncol=2)
x*y
x/y
